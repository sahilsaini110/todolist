{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","filteredTodos","setTodos","setStatus","value","onChange","e","console","log","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","App","useState","status","setFilteredTodos","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAwCeA,EAtCF,SAAC,GAA4E,IAA1EC,EAAyE,EAAzEA,UAAUC,EAA+D,EAA/DA,aAA8BC,GAAiC,EAAhDC,cAAgD,EAAjCD,OAAOE,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAmBrE,OAEI,iCACI,uBAAQC,MAAQN,EAAYO,SApBZ,SAACC,GACrBC,QAAQC,IAAIF,EAAEG,OAAOL,OACrBL,EAAaO,EAAEG,OAAOL,QAkBsCM,KAAK,OAAOC,UAAU,eAC9E,wBAAQC,QAjBS,SAACN,GACtBA,EAAEO,iBACNX,EAAS,GAAD,mBACDF,GADC,CAEJ,CAACc,KAAMhB,EAAWiB,WAAW,EAAOC,GAAiB,IAAdC,KAAKC,aAIhDnB,EAAa,KAS+BY,UAAU,cAAcD,KAAK,SAAjE,SACE,mBAAGC,UAAU,yBAEf,qBAAKA,UAAU,SAAf,SACI,yBAAQN,SAXC,SAACC,GACnBH,EAAUG,EAAEG,OAAOL,QAUuBe,KAAK,QAAQR,UAAU,cAAxD,UACE,wBAAQP,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,OCEHgB,EAhCF,SAAC,GAAkC,IAAjCN,EAAgC,EAAhCA,KAAMd,EAA0B,EAA1BA,MAAMqB,EAAoB,EAApBA,KAAMnB,EAAc,EAAdA,SAe7B,OACI,8BACI,sBAAKS,UAAU,OAAf,UACI,oBAAIA,UAAS,oBAAeU,EAAKN,UAAY,YAAc,IAA3D,SAAkED,IAClE,wBAAQF,QAfE,WAClBV,EACIF,EAAMsB,KAAI,SAACC,GACV,OAAIA,EAAKP,KAAOK,EAAKL,GAClB,2BACOO,GADP,IACaR,WAAYQ,EAAKR,YAExBQ,OAQ4BZ,UAAU,eAA5C,SACI,mBAAGA,UAAU,mBAGjB,wBAAQC,QAtBE,WACtBV,EAASF,EAAMwB,QAAO,SAACC,GAAD,OAAQA,EAAGT,KAAOK,EAAKL,QAqBDL,UAAU,YAA1C,SACI,mBAAGA,UAAU,yBCLlBe,EAnBE,SAAC,GAAuC,IAAtC1B,EAAqC,EAArCA,MAAQE,EAA6B,EAA7BA,SAAUD,EAAmB,EAAnBA,cACjC,OACI,8BACI,qBAAKU,UAAU,iBAAf,SACI,oBAAIA,UAAU,YAAd,SAEGV,EAAcqB,KAAI,SAAAD,GAAI,OACrB,cAAC,EAAD,CAAMrB,MAAOA,EACZE,SAAUA,EACVmB,KAAMA,EAENP,KAAMO,EAAKP,MADNO,EAAKL,cCkChBW,MA1Cf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACP9B,EADO,KACIC,EADJ,OAEW6B,mBAAS,IAFpB,mBAEP5B,EAFO,KAEAE,EAFA,OAGW0B,mBAAS,OAHpB,mBAGPC,EAHO,KAGA1B,EAHA,OAI0ByB,mBAAS,IAJnC,mBAIP3B,EAJO,KAIQ6B,EAJR,KA0Bb,OAJDC,qBAAU,YAfY,WACnB,OAAOF,GACL,IAAK,YACHC,EAAiB9B,EAAMwB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACF,IAAK,cACHe,EAAiB9B,EAAMwB,QAAO,SAAAH,GAAI,OAAuB,IAAnBA,EAAKN,cAC3C,MACF,QACEe,EAAiB9B,IAOvBgC,KACC,CAAChC,EAAQ6B,IAGR,sBAAKlB,UAAU,MAAf,UACC,iCACE,oDAED,cAAC,EAAD,CAAMb,UAAWA,EACjBE,MAAOA,EACPE,SAAUA,EACVH,aAAcA,EACdI,UAAWA,IAEX,cAAC,EAAD,CAAUH,MAAOA,EAAOE,SAAUA,EAAUD,cAAeA,QC7BlDgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1a256393.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Form = ({ inputText,setInputText , filteredTodos, todos, setTodos, setStatus }) => {\r\n\r\n    const inputTextHandler =(e) =>{\r\n        console.log(e.target.value);\r\n        setInputText(e.target.value);//stores the input value and we can use it when we want\r\n    };\r\n    const submitTodoHandler =(e) =>{\r\n        e.preventDefault();// prevent page from refreshing\r\n    setTodos([\r\n        ...todos,\r\n        {text: inputText, completed: false, id:Math.random()*1000\r\n\r\n        }\r\n    ]); \r\n    setInputText(\"\");//set input block back to empty\r\n    };\r\n    const statusHandler =(e)=>{\r\n       setStatus(e.target.value);\r\n    };\r\n    return (\r\n       \r\n        <form>\r\n            <input  value={ inputText } onChange={inputTextHandler} type=\"text\" className=\"todo-input\" />\r\n            <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n              <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                  <option value=\"all\">All</option>\r\n                  <option value=\"completed\">Completed</option>\r\n                  <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>  \r\n        \r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst Todo = ({text ,todos,todo ,setTodos}) => {\r\n    const deleteHandler = () =>{\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n    };\r\n    const completeHandler=()=>{\r\n        setTodos(\r\n            todos.map((item)=>{\r\n             if (item.id === todo.id){\r\n                return{\r\n                    ...item, completed: !item.completed };\r\n             };\r\n               return item;\r\n            }));\r\n        \r\n    } ;\r\n    return (\r\n        <div>\r\n            <div className=\"todo\">\r\n                <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n                <button onClick={completeHandler} className=\"complete-btn\">\r\n                    <i className=\"fas fa-check\"></i>\r\n\r\n                </button>\r\n                <button onClick={deleteHandler} className=\"trash-btn\">\r\n                    <i className=\"fas fa-trash\"></i>\r\n\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Todo\r\n","import React from 'react';\r\nimport Todo from './Todo';\r\nconst TodoList = ({todos , setTodos, filteredTodos}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"todo-container\">\r\n                <ul className=\"todo-list\">\r\n{/* using curly{} means i can writejs code here todos.map help to take all inpur which are stored in form odf array */}\r\n                  {filteredTodos.map(todo =>(\r\n                    <Todo todos={todos}\r\n                     setTodos={setTodos}\r\n                     todo={todo} \r\n                     key={todo.id} \r\n                     text={todo.text}/>\r\n                  ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import React, {useState, useEffect} from 'react'\nimport './App.css';\nimport Form from \"./components/Form.js\"\nimport TodoList from './components/TodoList';\nfunction App() {\n  const[inputText, setInputText]= useState(\"\");\n  const[todos, setTodos]= useState([]);\n  const[status,setStatus]=useState(\"all\");\n  const[filteredTodos, setFilteredTodos]=useState([]);\n\n\n  const filterHandler =() => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n          break;\n    };\n  };\n\n  \n useEffect(() => {\n  filterHandler();\n}, [todos , status]);\n\n  return (\n    <div className=\"App\">\n     <header>\n       <h2> SS's Todo List </h2>\n      </header>\n      <Form inputText={inputText} \n      todos={todos} \n      setTodos={setTodos}\n      setInputText={setInputText}\n      setStatus={setStatus}\n      />\n      <TodoList todos={todos} setTodos={setTodos} filteredTodos={filteredTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}